package sepm.ss15.e0926076.persistence;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Created by Sebastian on 13.03.2015.
 *
 * Establishes and keeps the connection to the database. The Connection is a Singleton and there can only be one connection open
 * at a time (because of H2 database).
 */
public class DatabaseConnector {

    private static final Logger logger = LogManager.getLogger(DatabaseConnector.class);
    private static Connection con = null;

    /**
     * Loads the driver for the database and gets the connection. Creates the SQL Schema if it does not exist yet
     *
     * @throws SQLException
     */
    private static void openConnection() throws SQLException {
        try {
            Class.forName("org.h2.Driver");
            con = DriverManager.getConnection("jdbc:h2:file:database/test", "sa", "");

            PreparedStatement Stmt_create_horse = con.prepareStatement(
                    "CREATE TABLE IF NOT EXISTS horses(" +
                            "horse_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                            "is_deleted BOOLEAN NOT NULL, " +
                            "horse_name VARCHAR(20) NOT NULL, " +
                            "min_speed INT NOT NULL," +
                            "max_speed INT NOT NULL, " +
                            "pic_path VARCHAR(700) NOT NULL)");

            PreparedStatement Stmt_create_jockey = con.prepareStatement(
                    "CREATE TABLE IF NOT EXISTS jockeys(" +
                            "jockey_ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                            "is_deleted BOOLEAN NOT NULL, " +
                            "jockey_name VARCHAR(20) NOT NULL, " +
                            "sex VARCHAR(1) CHECK (sex IN ('m', 'w')), " +
                            "height INT NOT NULL, " +
                            "skill DOUBLE default 0)");

            PreparedStatement Stmt_create_race = con.prepareStatement(
                    "CREATE TABLE IF NOT EXISTS races(" +
                            "race_ID INT NOT NULL, " +
                            "horse_ID INT REFERENCES horses(horse_ID), " +
                            "jockey_ID INT REFERENCES jockeys(jockey_ID), " +
                            "placement INT NOT NULL, " +
                            "average_speed DOUBLE NOT NULL, " +
                            "random_speed DOUBLE NOT NULL, " +
                            "jockey_skill DOUBLE NOT NULL, " +
                            "luck_factor DOUBLE NOT NULL, " +
                            "PRIMARY KEY (race_ID, horse_ID, jockey_ID))");

            Stmt_create_horse.execute();
            Stmt_create_jockey.execute();
            Stmt_create_race.execute();

        } catch (ClassNotFoundException e) {
            logger.error("ERROR: failed to load H2 JDBC driver.");
            e.printStackTrace();
        } catch (SQLException s) {
            logger.error("ERROR: SQL EXCEPTION");
            s.printStackTrace();
        }
    }

    /**
     * Get the connection, Singleton so it always returns the same instance (or creates a new one on first call)
     *
     * @return the Singleton Object of the Connection
     * @throws SQLException
     */
    public static Connection getConnection() throws SQLException {
        if (con == null) {
            openConnection();
        }
        return con;
    }

    /**
     * Close the Connection to the database
     *
     * @throws SQLException
     */
    public static void closeConnection() throws SQLException {
        if (con != null) {
            con.close();
        }
    }

}
